import { test, expect } from "vitest";

const toolkit = require("../dist");

test("exports", () => {
  expect(toolkit).toMatchInlineSnapshot(`
    {
      "Path": [Function],
      "bgBlack": [Function],
      "bgBlue": [Function],
      "bgCyan": [Function],
      "bgGreen": [Function],
      "bgMagenta": [Function],
      "bgRed": [Function],
      "bgWhite": [Function],
      "bgYellow": [Function],
      "black": [Function],
      "blue": [Function],
      "bold": [Function],
      "cyan": [Function],
      "dedent": [Function],
      "dim": [Function],
      "gray": [Function],
      "green": [Function],
      "grey": [Function],
      "hidden": [Function],
      "inverse": [Function],
      "italic": [Function],
      "magenta": [Function],
      "parseArgv": [Function],
      "quote": [Function],
      "red": [Function],
      "reset": [Function],
      "runMain": [Function],
      "strikethrough": [Function],
      "stripAnsi": [Function],
      "t": {
        "$ApiFunctions": {
          "asType": [Function],
          "assertType": [Function],
          "isOfType": [Function],
          "stringifyValue": [Function],
        },
        "$BasicTypes": {
          "Array": [Function],
          "ArrayBuffer": [Function],
          "BigInt": [Function],
          "Boolean": [Function],
          "DataView": [Function],
          "Date": [Function],
          "Error": [Function],
          "Float32Array": [Function],
          "Float64Array": [Function],
          "Function": [Function],
          "Infinity": [Function],
          "Int16Array": [Function],
          "Int32Array": [Function],
          "Int8Array": [Function],
          "Map": [Function],
          "NaN": [Function],
          "NegativeInfinity": [Function],
          "Number": [Function],
          "Object": [Function],
          "RegExp": [Function],
          "Set": [Function],
          "SharedArrayBuffer": [Function],
          "String": [Function],
          "Symbol": [Function],
          "TypedArray": [Function],
          "Uint16Array": [Function],
          "Uint32Array": [Function],
          "Uint8Array": [Function],
          "Uint8ClampedArray": [Function],
          "any": [Function],
          "anyArray": [Function],
          "anyFunction": [Function],
          "anyMap": [Function],
          "anyObject": [Function],
          "anySet": [Function],
          "anyTypeValidator": [Function],
          "array": [Function],
          "arrayOfAny": [Function],
          "arrayOfUnknown": [Function],
          "bigint": [Function],
          "boolean": [Function],
          "false": [Function],
          "falsy": [Function],
          "integer": [Function],
          "map": [Function],
          "never": [Function],
          "nonNullOrUndefined": [Function],
          "null": [Function],
          "nullish": [Function],
          "number": [Function],
          "numberIncludingNanAndInfinities": [Function],
          "object": [Function],
          "objectOrNull": [Function],
          "set": [Function],
          "string": [Function],
          "symbol": [Function],
          "true": [Function],
          "truthy": [Function],
          "undefined": [Function],
          "unknown": [Function],
          "unknownFunction": [Function],
          "unknownMap": [Function],
          "unknownObject": [Function],
          "unknownSet": [Function],
          "unknownTypeValidator": [Function],
          "void": [Function],
        },
        "$TypeConstructors": {
          "and": [Function],
          "arrayOf": [Function],
          "exactBigInt": [Function],
          "exactNumber": [Function],
          "exactString": [Function],
          "exactSymbol": [Function],
          "hasClassName": [Function],
          "hasToStringTag": [Function],
          "instanceOf": [Function],
          "intersection": [Function],
          "mapOf": [Function],
          "mappingObjectOf": [Function],
          "maybe": [Function],
          "objectStr": [Function],
          "objectWithOnlyTheseProperties": [Function],
          "objectWithProperties": [Function],
          "optional": [Function],
          "or": [Function],
          "partialObjectWithProperties": [Function],
          "record": [Function],
          "setOf": [Function],
          "stringMatching": [Function],
          "symbolFor": [Function],
          "tuple": [Function],
          "union": [Function],
        },
        "Array": [Function],
        "ArrayBuffer": [Function],
        "BigInt": [Function],
        "Boolean": [Function],
        "DataView": [Function],
        "Date": [Function],
        "Error": [Function],
        "Float32Array": [Function],
        "Float64Array": [Function],
        "Function": [Function],
        "Infinity": [Function],
        "Int16Array": [Function],
        "Int32Array": [Function],
        "Int8Array": [Function],
        "Map": [Function],
        "NaN": [Function],
        "NegativeInfinity": [Function],
        "Number": [Function],
        "Object": [Function],
        "RegExp": [Function],
        "Set": [Function],
        "SharedArrayBuffer": [Function],
        "String": [Function],
        "Symbol": [Function],
        "TypedArray": [Function],
        "Uint16Array": [Function],
        "Uint32Array": [Function],
        "Uint8Array": [Function],
        "Uint8ClampedArray": [Function],
        "and": [Function],
        "any": [Function],
        "anyArray": [Function],
        "anyFunction": [Function],
        "anyMap": [Function],
        "anyObject": [Function],
        "anySet": [Function],
        "anyTypeValidator": [Function],
        "array": [Function],
        "arrayOf": [Function],
        "arrayOfAny": [Function],
        "arrayOfUnknown": [Function],
        "asType": [Function],
        "assertType": [Function],
        "bigint": [Function],
        "boolean": [Function],
        "exactBigInt": [Function],
        "exactNumber": [Function],
        "exactString": [Function],
        "exactSymbol": [Function],
        "false": [Function],
        "falsy": [Function],
        "hasClassName": [Function],
        "hasToStringTag": [Function],
        "instanceOf": [Function],
        "integer": [Function],
        "intersection": [Function],
        "isOfType": [Function],
        "map": [Function],
        "mapOf": [Function],
        "mappingObjectOf": [Function],
        "maybe": [Function],
        "never": [Function],
        "nonNullOrUndefined": [Function],
        "null": [Function],
        "nullish": [Function],
        "number": [Function],
        "numberIncludingNanAndInfinities": [Function],
        "object": [Function],
        "objectOrNull": [Function],
        "objectStr": [Function],
        "objectWithOnlyTheseProperties": [Function],
        "objectWithProperties": [Function],
        "optional": [Function],
        "or": [Function],
        "partialObjectWithProperties": [Function],
        "record": [Function],
        "set": [Function],
        "setOf": [Function],
        "string": [Function],
        "stringMatching": [Function],
        "stringifyValue": [Function],
        "symbol": [Function],
        "symbolFor": [Function],
        "true": [Function],
        "truthy": [Function],
        "tuple": [Function],
        "undefined": [Function],
        "union": [Function],
        "unknown": [Function],
        "unknownFunction": [Function],
        "unknownMap": [Function],
        "unknownObject": [Function],
        "unknownSet": [Function],
        "unknownTypeValidator": [Function],
        "void": [Function],
      },
      "underline": [Function],
      "white": [Function],
      "yellow": [Function],
    }
  `);
});
